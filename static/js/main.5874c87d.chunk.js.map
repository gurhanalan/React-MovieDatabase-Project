{"version":3,"sources":["pages/MovieDetails/MovieDetail.style.jsx","components/NavBar/NavBar.jsx","pages/MovieDetails/MovieDetails.jsx","components/Card/Card.style.jsx","components/Card/index.jsx","components/CardList/CardList.style.jsx","components/CardList/index.jsx","components/SearchBar/SearchBar.style.jsx","components/SearchBar/index.jsx","pages/MovieList/MovieList.js","App.jsx","index.js"],"names":["MainWrapper","styled","div","MovieImage","img","TextOverview","p","MovieTitle","h2","MovieImageWrapper","MovieRating","TagLine","NavBarWrapper","StyledLink","Link","NavBar","to","MovieDetails","id","useParams","history","useHistory","useState","movie","setMovie","useEffect","axios","get","params","api_key","language","then","response","data","catch","error","console","log","push","src","poster_path","alt","vote_average","vote_count","tagline","title","overview","StyledCardWrapper","StyledCardText","StyledCardImage","Card","imgsrc","onClick","original_title","StyledCardsWrapper","CardList","useContext","MovieContext","movies","baseImageUrl","map","index","StyledSearchBarInput","input","StyledSearchBarButton","button","StyledSearchBarWrapper","SearchBar","setSearchMovie","useRef","search","current","value","ref","onKeyDown","e","key","createContext","MovieList","setMovies","searchMovie","query","page","results","filter","Provider","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5874c87d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainWrapper = styled.div`\r\n    min-height: calc(100vh - 5rem);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const CardWrapper = styled.div``;\r\n\r\nexport const MovieImage = styled.img`\r\n    width: 100%;\r\n    max-width: 40rem;\r\n    height: auto;\r\n    object-fit: cover;\r\n`;\r\n\r\nexport const TextOverview = styled.p`\r\n    max-width: 80rem;\r\n    font-size: 1.6rem;\r\n    padding: 2rem;\r\n    text-align: justify;\r\n    line-height: 1.6;\r\n`;\r\nexport const MovieTitle = styled.h2`\r\n    max-width: 40rem;\r\n    font-size: 3rem;\r\n    letter-spacing: 2px;\r\n`;\r\n\r\nexport const MovieImageWrapper = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const MovieRating = styled.p`\r\n    color: red;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    width: 20rem;\r\n    padding: 0 1rem;\r\n    font-weight: bolder;\r\n    position: absolute;\r\n    font-size: 2rem;\r\n    right: 0rem;\r\n    bottom: 2rem;\r\n    span {\r\n        font-size: 1.4rem;\r\n    }\r\n`;\r\n\r\nexport const TagLine = styled.p`\r\n    color: red;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    width: 100%;\r\n    top: 0;\r\n    position: absolute;\r\n    font-weight: bolder;\r\n    padding: 0 1rem;\r\n    font-size: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBarWrapper = styled.div`\r\n    color: red;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 5rem;\r\n    font-size: 3rem;\r\n    /* svg {\r\n        cursor: pointer;\r\n    } */\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: red;\r\n    &:active {\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <NavBarWrapper>\r\n            <StyledLink to=\"/\">\r\n                <FaHome />\r\n            </StyledLink>\r\n        </NavBarWrapper>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport {\r\n    MainWrapper,\r\n    MovieImage,\r\n    MovieImageWrapper,\r\n    MovieRating,\r\n    MovieTitle,\r\n    TagLine,\r\n    TextOverview,\r\n} from \"./MovieDetail.style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\n\r\nconst apiKey = \"d94423c2996901c0fdff420de40c7d79\";\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\nconst baseUrl = \"https://api.themoviedb.org/3/movie/\";\r\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst MovieDetails = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [movie, setMovie] = useState(\"11\");\r\n    useEffect(() => {\r\n        axios\r\n            .get(baseUrl + id, {\r\n                params: {\r\n                    api_key: apiKey,\r\n                    language: \"en-US\",\r\n                },\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n                // moviesArray.push(...response.data.results);\r\n                setMovie(response?.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setMovie(null);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }, []);\r\n    console.log(movie);\r\n\r\n    const MovieDisplay = () => (\r\n        <>\r\n            <NavBar />\r\n            <MainWrapper>\r\n                <MovieImageWrapper>\r\n                    <MovieImage\r\n                        src={baseImageUrl + movie?.poster_path}\r\n                        alt=\"movie poster\"\r\n                    />\r\n\r\n                    <MovieRating>\r\n                        {movie?.vote_average}{\" \"}\r\n                        <span>/ {movie?.vote_count} votes</span>\r\n                    </MovieRating>\r\n                    <TagLine>{movie?.tagline}</TagLine>\r\n                </MovieImageWrapper>\r\n                <MovieTitle>{movie?.title}</MovieTitle>\r\n                <TextOverview>{movie?.overview}</TextOverview>\r\n            </MainWrapper>\r\n        </>\r\n    );\r\n    // In case movie page does not exist, it goes to homepage\r\n    !movie && history.push(\"/\");\r\n\r\n    return movie && MovieDisplay();\r\n};\r\n\r\nexport default MovieDetails;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCardWrapper = styled.div`\r\n    width: 30rem;\r\n    height: 40rem;\r\n    /* border: solid 1px black; */\r\n    box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    align-items: center;\r\n    /* justify-content: center; */\r\n    flex-direction: column;\r\n    padding: 0.5rem;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nexport const StyledCardText = styled.p`\r\n    color: red;\r\n    font-size: 1.8rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const StyledCardImage = styled.img`\r\n    height: 85%;\r\n    width: auto;\r\n    object-fit: cover;\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    StyledCardText,\r\n    StyledCardWrapper,\r\n    StyledCardImage,\r\n} from \"./Card.style\";\r\n\r\nexport const Card = ({ movie, imgsrc }) => {\r\n    // console.log(\"deneme\", movie);\r\n    const history = useHistory();\r\n    return (\r\n        <StyledCardWrapper onClick={() => history.push(\"/\" + movie.id)}>\r\n            <StyledCardImage src={imgsrc} alt=\"image\" />\r\n            <StyledCardText>{movie.original_title}</StyledCardText>\r\n        </StyledCardWrapper>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 3rem;\r\n    justify-content: center;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Card } from \"../Card\";\r\nimport { StyledCardsWrapper } from \"./CardList.style\";\r\nimport { MovieContext } from \"../../pages/MovieList/MovieList\";\r\n\r\nconst CardList = () => {\r\n    const { movies, baseImageUrl } = useContext(MovieContext);\r\n    return (\r\n        <StyledCardsWrapper>\r\n            {movies?.map((movie, index) => (\r\n                <Card\r\n                    key={index}\r\n                    movie={movie}\r\n                    imgsrc={baseImageUrl + movie.poster_path}\r\n                />\r\n            ))}\r\n        </StyledCardsWrapper>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSearchBarInput = styled.input`\r\n    color: red;\r\n    padding: 0.5rem;\r\n    font-size: 2rem;\r\n    width: 20rem;\r\n`;\r\n\r\nexport const StyledSearchBarButton = styled.button`\r\n    background-color: red;\r\n    font-size: 2rem;\r\n    color: black;\r\n    font-weight: bolder;\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const StyledSearchBarWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    padding: 3rem 0;\r\n`;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport {\r\n    StyledSearchBarInput,\r\n    StyledSearchBarButton,\r\n    StyledSearchBarWrapper,\r\n} from \"./SearchBar.style\";\r\nimport { MovieContext } from \"../../pages/MovieList/MovieList\";\r\n\r\nconst SearchBar = () => {\r\n    const { setSearchMovie } = useContext(MovieContext);\r\n    const input = useRef(null);\r\n\r\n    const search = () => {\r\n        setSearchMovie(input?.current?.value);\r\n        input.current.value = \"\";\r\n    };\r\n    return (\r\n        <StyledSearchBarWrapper>\r\n            <StyledSearchBarInput\r\n                ref={input}\r\n                onKeyDown={(e) => e.key === \"Enter\" && search()}\r\n            />\r\n            <StyledSearchBarButton onClick={search}>\r\n                Search\r\n            </StyledSearchBarButton>\r\n        </StyledSearchBarWrapper>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport CardList from \"../../components/CardList\";\nimport SearchBar from \"../../components/SearchBar\";\n\nconst apiKey = \"d94423c2996901c0fdff420de40c7d79\";\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=Star%20Wars&page=1\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieContext = createContext(null);\n\nfunction MovieList() {\n    const [movies, setMovies] = useState(null);\n    const [searchMovie, setSearchMovie] = useState(\"Star Wars\");\n\n    useEffect(() => {\n        axios\n            .get(baseUrl, {\n                params: {\n                    api_key: apiKey,\n                    query: searchMovie,\n                    page: \"1\",\n                },\n            })\n            .then(function (response) {\n                console.log(response.data.results);\n                // moviesArray.push(...response.data.results);\n                setMovies(\n                    response?.data?.results.filter((movie) => movie.poster_path)\n                );\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n    }, [searchMovie]);\n    return (\n        <MovieContext.Provider value={{ setSearchMovie, movies, baseImageUrl }}>\n            <SearchBar />\n            <CardList />\n        </MovieContext.Provider>\n    );\n}\n\nexport default MovieList;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport MovieDetails from \"./pages/MovieDetails/MovieDetails\";\r\nimport MovieList from \"./pages/MovieList/MovieList\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/:id\" component={MovieDetails} />\r\n                <Route path=\"/\" component={MovieList} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}